const K_DEBUG=!1,K_DEBUG_SEEK_TIME=60,K_DEBUG_LOG_ALL_FRAMES=!1,K_DEBUG_SHOW_FRAMECODE=!1,K_DEBUG_FRAMECODE_SCALE=10,K_MUTE=!1;let framecodeSprite,pauseKey,frameQueryKey;const K_BETA=!1,fpsSamples=[],K_PROJECT_WIDTH=1280,K_PROJECT_HEIGHT=720,K_PROJECT_ASPECT_RATIO=1280/720,K_INSTALLATION_MODE=!1;let socket=null;const K_PETITION=!0;let petitionSmileGfx,redirectingText,noPetitionFaceDetectedText,userFailedToSmileTimeout,playButton,redirectionInitiated=!1,petitionFrame=0,K_MOBILE=!1,mobileTapText=null,K_USER_MUST_INITIATE_VIDEO=!1;const K_VALIDATE_DEBOUNCE_DELAY=1e3;let debounceHandle=null;const K_EMOJI_EXPLOSION_PARTICLES=100,K_FRAMECODE_BIT_DEPTH=16,K_NUMBER_OF_LANDMARKS=68,K_GET_OPTICAL_SYNC_INTERVAL=1;let K_MULTITHREADING=!0,cvWorker=null,K_LOGO_ANIMATION=!0;const K_RUN_CV_ASYNC=!1;let K_CV_REFRESH_INTERVAL=4;const K_AR_FRAME_INTERVAL=1,K_FACE_CV_DOWNRES_FACTOR=1,K_VIDEO_PROCESSING_DOWNRES_FACTOR=4,K_VIDEO_PROCESSING_FRAME_INTERVAL=1,K_FACE_OUTLINE=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],K_FACE_MOUTH_OUTER=[48,49,50,51,52,53,54,55,56,57,58,59,48],K_FACE_MOUTH_INNER_TOP=[60,61,62,63,64],K_FACE_MOUTH_INNER_BOTTOM=[60,67,66,65,64],K_FACE_SEPTUM=[27,28,29,30],K_FACE_NOSE=[31,32,33,34,35],K_FACE_LEFT_EYE=[36,37,38,39,40,41,36],K_FACE_RIGHT_EYE=[42,43,44,45,46,47,42],K_FACE_LEFT_BROW=[17,18,19,20,21],K_FACE_RIGHT_BROW=[22,23,24,25,26];let screenCopy,visualViewportCopy,styleMediaCopy,fakeWindow,fakeDocument,K_SHOW_BASEBALL_CARD=!0;const K_BASEBALL_CARD_TEXT_FIELD_HEIGHT=300;let baseballCard,baseballCardSprite,theWayISeeYouTitle,standbyForAIVisionTitle,pizzaTitle,pizzaBias,kanyeTitle,kanyeBias,genderStatsBias,threeTitle,twoTitle,oneTitle,techQuizTitle,youLikeDogsSFX,youDontLikeDogsSFX,youPreferMenSFX,youPreferWomenSFX,dogEmojiEmitter,dogStats,adGfx,gradient1Sprite,pictureFrameSprite,userPhotoSprite,userPhotoZoomTimer,userPhotoBMD,userPhotoScale,pixelValuesGroup,midgroundGroup,gradientBackgroundGroup,museumCardSprite,actualImagesUsedToTrainTitle,trainingImageCelebrityTitle,userVideoProcessedSpriteLeftMask,altUserVideoGroup,gradient2Sprite,recordedFeatureGroup,landmarkPlaybackTimer,recordingOfYourFaceTitle,instructionsTitle,instructionsBlinkTimer,gradient3Sprite,yourMouthShapeTitle,mouthModel,mouthPlaybackTimer,mouthQuantificationTitle,noTitle,noBlinkTimer,raceStatsBias,youPreferWhitePeopleSFX,youPreferBlackPeopleSFX,higherOrderQuantificationTitle,higherOrderQuantificationLeftLabel,higherOrderQuantificationRightLabel,higherOrderQuantificationLeftPercent,higherOrderQuantificationRightPercent,springStudiosMap,mapGroup,mapGfx,mapUserLabel,mapEmotionLabel,screenSpaceUserLocation,mapBlinkTimer,dogNose,dogEars,headPhysicsSprite,snapchatEmojiEmitter,applauseEmojiEmitter,estimatedIQTitle,iqStatTitle,thatPartBitSFX,thatpartWaySFX,isPoorSFX,isNotPoorSFX,isMentallyIllSFX,isNotMentallyIllSFX,isSelfLoathingSFX,isNotSelfLoathingSFX,altUserVideoProcessedBMD,finalOverlayGroup,finalBoundingBlinkTimer,logoSprite,logoAnimationTimer,dogLoopVideo,dogLoopSprite,sunglasses,tophat,monocle,mustache,tophatGroup,fullScreenButton,pixelatedUserFaceBMD,pixelatedUserFaceSprite,userVideoSpriteScale,kachingSFX,dollarEmitter,userFaceRawEmotionsText,computerDesktop,mouseCursor,doubleClickSFX,disney,twentiethCenturyFox,kelloggsCornFlakes,yourLocalPizzeria,forYourNextJob,zuckScreenSpaceBMD,zuckScreenSpaceSprite,poorHat,crown,leftHeart,rightHeart,leftProhibited,rightProhibited,estimatedIncomeLabel,facialAffectLabel,reactionToYourselfLabel,finalPopSFX,thoughtBubbleHappy,thoughtBubbleSad,creditTitle,mozillaLogoWhite,faceCameraAndCheckLighting,pressRedButtonToStart,notValidatedTimer,validatedTimer,patentBoxTimer,baseballCardPicCaptured=!1,readyForBaseballCardCaptureFrame=null,creditSqueezeOffset=0,questionMarks=[],deserveAds=[],lastKnownFaceBounding={x:null,y:null,size:null},recordedLandmarkText=new Array(68),validateFrame=0,readyToPlay=hasStarted=!1,zuckAlertBoxPosition={x:640,y:360},wealthQuantificationComplete=mentalHealthQuantificationComplete=selfImageQuantificationComplete=!1;const K_TEXT_BOX_SIZE=375;let dogTextBox,genderTextBox,raceTextBox,higherOrderTextBoxLeft,higherOrderTextBoxRight,allTextBoxesGroup,inFrontOfTextBoxGroup,behindTextBoxesGroup,frameCanvas,frame,lastFrame,userVideo,filmVideo,userVideoSprite,filmSprite,cvSprite,userVideoMaskQuarterRight,userVideoMaskQuarterLeft,boundingBox,faceModel,emotionChart,dimmerScreen,userVideoStatusText,angryLabelText,sadLabelText,surprisedLabelText,happyLabelText,userVideoBackplateBMD,userVideoBackplateSprite,landmarks,clmCanvas,emotions,userVideoProcessedBMD,userVideoProcessedSprite,userVideoAspect,userVideoGroup,filmGroup,overlayGroup,textGroup,landmarkGroup,loadGfx,likeDogs=!0,preferMen=!1,likeKanye=!0,likePizza=!0,preferWhite=!1,wayOverYourHead=!1,isPoor=!1,isMentallyIll=!1,isSelfLoathing=!1,iq=100,estimatedIncome=31099,menPos=womenPos=null,dogPos=dogNeg=null,kanyePos=kanyeNeg=null,whiteNegative=nonWhiteNegative=finalRaceBias=null,democratPct=republicanPct=null,gameframe=0,landmarkText=new Array(68),activated=!1,startTime=0,getLandmarks=!0,getEmotions=!1,validationStateFaceData=[],viewerFaceData=[];function viewerFaceDataStruct(e=null,t=null,a=null){if(this.frame=e,this.landmarks=null,this.neutral=null,this.happy=null,this.sad=null,this.angry=null,this.fearful=null,this.disgusted=null,this.surprised=null,t){this.landmarks=new Array,this.length=t.length;for(let e=0;e<this.length;e+=1){const a=t[e];this.landmarks.push([a[0],a[1]])}}a&&(this.neutral=a.neutral,this.happy=a.happy,this.sad=a.sad,this.angry=a.angry,this.fearful=a.fearful,this.disgusted=a.disgusted,this.surprised=a.surprised)}function getAveragePositiveEmotions(e,t,a){if(e.length>0){let i=0,o=0;for(let r=0;r<e.length;r+=1)e[r].frame>=t&&e[r].frame<a&&e[r].happy&&(i+=e[r].happy,o+=1);if(o>0)return i/o}return null}function getAverageNegativeEmotions(e,t,a){if(e.length>0){let i=0,o=0;for(let r=0;r<e.length;r+=1)e[r].frame>=t&&e[r].frame<a&&e[r].sad&&(i+=e[r].sad+e[r].angry+e[r].fearful+e[r].disgusted,o+=4);if(o>0)return i/o}return null}const cfg={width:1280,height:720,multiTexture:!1,parent:"the-film",enableDebug:!1,renderer:Phaser.CANVAS,antialias:!0};Phaser.Device.onInitialized.add(e=>{if(e.iOS&&e.mobileSafari&&navigator.userAgent.includes("CriOS")||e.iOS&&e.mobileSafari&&navigator.userAgent.includes("FxiOS")||e.edge||e.ie)game.state.start("unsupportedBrowser");else{if(e.mobileSafari&&(K_SHOW_BASEBALL_CARD=!1),(e.safari||e.mobileSafari||e.iOS||e.android)&&(K_USER_MUST_INITIATE_VIDEO=!0),e.desktop||(K_MOBILE=!0),e.chrome?(K_MULTITHREADING=!0,navigator.hardwareConcurrency&&navigator.hardwareConcurrency<4&&(K_CV_REFRESH_INTERVAL=8)):(K_MULTITHREADING=!1,(!navigator.hardwareConcurrency||navigator.hardwareConcurrency<8)&&(K_CV_REFRESH_INTERVAL=8,K_LOGO_ANIMATION=!1)),K_MULTITHREADING){screenCopy={};for(let e in screen)screenCopy[e]=+screen[e];screenCopy.orientation={};for(let e in screen.orientation)"function"!=typeof screen.orientation[e]&&(screenCopy.orientation[e]=screen.orientation[e]);if(visualViewportCopy={},void 0!==window.visualViewport)for(let e in visualViewport)"function"!=typeof visualViewport[e]&&(visualViewportCopy[e]=+visualViewport[e]);if(styleMediaCopy={},void 0!==window.styleMedia)for(let e in styleMedia)"function"!=typeof styleMedia[e]&&(styleMediaCopy[e]=styleMedia[e]);fakeWindow={},Object.getOwnPropertyNames(window).forEach(e=>{try{"function"!=typeof window[e]&&"object"!=typeof window[e]&&"undefined"!==e&&"NaN"!==e&&"Infinity"!==e&&"event"!==e&&"name"!==e&&(fakeWindow[e]=window[e])}catch(e){}}),fakeWindow.screen=screenCopy,fakeWindow.visualViewport=visualViewportCopy,fakeWindow.styleMedia=styleMediaCopy,fakeDocument={};for(let e in document)try{"all"===e||("function"!=typeof document[e]&&"object"!=typeof document[e]?fakeDocument[e]=document[e]:"object"==typeof document[e]?fakeDocument[e]=null:"function"==typeof document[e]&&(fakeDocument[e]={type:"*function*",name:document[e].name}))}catch(e){}}K_MULTITHREADING&&(cvWorker=new Worker("js/cv-worker.min.js")).postMessage({fakeWindow:fakeWindow,fakeDocument:fakeDocument,opcode:0}),game.state.start("boot")}});const game=new Phaser.Game(cfg);game.state.add("unsupportedBrowser",unsupportedBrowserState),game.state.add("boot",bootState),game.state.add("load",loadState),game.state.add("bootcv",bootCVState),game.state.add("validate",validateState),game.state.add("dataInit",dataInitState),game.state.add("play",playState),game.state.add("petition",petitionState);