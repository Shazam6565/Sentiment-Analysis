const bootCVState={create:function(){if(K_MULTITHREADING)game.state.start("validate");else{loadGfx=game.add.graphics(0,0),loadGfx.beginFill(9211020,1),loadGfx.drawRect(game.world.centerX-300,game.world.centerY-100,600,20),faceapi.nets.tinyFaceDetector.loadFromUri("lib/models").then(()=>{loadGfx.clear(),loadGfx.beginFill(9211020,1),loadGfx.drawRect(game.world.centerX-300,game.world.centerY-100,600,20),loadGfx.beginFill(16777215,1),loadGfx.drawRect(game.world.centerX-300,game.world.centerY-100,200,20),faceapi.nets.faceLandmark68TinyNet.loadFromUri("lib/models").then(()=>{loadGfx.clear(),loadGfx.beginFill(9211020,1),loadGfx.drawRect(game.world.centerX-300,game.world.centerY-100,600,20),loadGfx.beginFill(16777215,1),loadGfx.drawRect(game.world.centerX-300,game.world.centerY-100,400,20),faceapi.nets.faceExpressionNet.loadFromUri("lib/models").then(()=>{clmCanvas=game.add.bitmapData(Math.round(640/K_FACE_CV_DOWNRES_FACTOR),Math.round(480/K_FACE_CV_DOWNRES_FACTOR)),clmCanvas.copy("don",0,0,640,480,0,0,void 0,void 0,void 0,void 0,void 0,1/K_FACE_CV_DOWNRES_FACTOR,1/K_FACE_CV_DOWNRES_FACTOR),clmCanvas.update(),loadGfx.clear(),loadGfx.beginFill(9211020,1),loadGfx.drawRect(game.world.centerX-300,game.world.centerY-100,600,20),loadGfx.beginFill(16777215,1),loadGfx.drawRect(game.world.centerX-300,game.world.centerY-100,500,20);const e=new faceapi.TinyFaceDetectorOptions({inputSize:160,scoreThreshold:.5});faceapi.detectSingleFace(clmCanvas.canvas,e).withFaceLandmarks(!0).withFaceExpressions().then(e=>{loadGfx.clear(),loadGfx.beginFill(9211020,1),loadGfx.drawRect(game.world.centerX-300,game.world.centerY-100,600,20),loadGfx.beginFill(16777215,1),loadGfx.drawRect(game.world.centerX-300,game.world.centerY-100,600,20),clmCanvas.destroy(),game.state.start("validate")})})})})}}};